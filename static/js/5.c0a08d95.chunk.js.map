{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","style","dialog","to","activeClassName","activeLink","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsElements","dialogsPage","dialogs","map","key","messagesElements","messages","msg","isAuth","dialogItems","values","clickSendMessage","newMessage","mapStateToPropsForRedirect","state","auth","compose","connect","dispatch","onNewMessageSendActionCreator","Component","RedirectComponent","this","React"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,WAAa,4BAA4B,SAAW,0BAA0B,QAAU,2B,uGCkBzKC,EAfI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,yBAAKC,UAAWC,IAAMC,QAClB,kBAAC,IAAD,CAASC,GAAIL,EAAMM,gBAAiBH,IAAMI,YACrCR,EAAMS,QCDRC,EALC,SAACV,GACb,OAAO,yBAAKG,UAAWC,IAAMO,SAAS,2BAAIX,EAAMW,W,0CCA9CC,EAAcC,YAAiB,IAcxBC,EAAsBC,YAAU,CAACC,KAAM,yBAAjBD,EAbZ,SAAAf,GACnB,OACI,0BAAMiB,SAAUjB,EAAMkB,cAClB,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBH,KAAK,aACLe,YAAY,sBAEnB,4CCyBGC,EAhCC,SAACzB,GAEb,IAAI0B,EAAkB1B,EAAM2B,YAAYC,QAAQC,KAAK,SAAAxB,GAAM,OAAI,kBAAC,EAAD,CAAYI,KAAMJ,EAAOI,KACbP,GAAIG,EAAOH,GACX4B,IAAKzB,EAAOH,QAEnF6B,EAAmB/B,EAAM2B,YAAYK,SAASH,KAAK,SAAAI,GAAG,OAAI,kBAAC,EAAD,CAAStB,QAASsB,EAAItB,QACbmB,IAAKG,EAAI/B,QAOhF,OAAKF,EAAMkC,OAKP,yBAAK/B,UAAWC,IAAMwB,SAClB,yBAAKzB,UAAWC,IAAM+B,aACjBT,GAEL,yBAAKvB,UAAWC,IAAM4B,UACjBD,GAEL,kBAACjB,EAAD,CAAqBG,SAhBP,SAACmB,GACnBpC,EAAMqC,iBAAiBD,EAAOE,gBAIvB,kBAAC,IAAD,CAAUhC,GAAG,Y,gCClBxBiC,EAA6B,SAACC,GAAD,MAAY,CACzCN,OAAQM,EAAMC,KAAKP,S,OCeRQ,sBACXC,aAdkB,SAACH,GACnB,MAAO,CACHb,YAAaa,EAAMb,gBAGF,SAACiB,GACtB,MAAO,CACHP,iBAAkB,SAACC,GACfM,EAASC,YAA8BP,UDPV,SAACQ,GAAe,IAE/CC,EAF8C,uKAI5C,OAAKC,KAAKhD,MAAMkC,OAGL,kBAACY,EAAcE,KAAKhD,OAFpB,kBAAC,IAAD,CAAUM,GAAG,eALoB,GAEpB2C,IAAMH,WAYtC,OAFqCH,YAAQJ,EAARI,CAAoCI,KCA9DL,CAGbjB","file":"static/js/5.c0a08d95.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1PK4h\",\"dialogItems\":\"Dialogs_dialogItems__qJeth\",\"activeLink\":\"Dialogs_activeLink__3ADx_\",\"messages\":\"Dialogs_messages__2Sk0u\",\"message\":\"Dialogs_message__3IT2E\"};","import React from 'react';\r\nimport style from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id\r\n\r\n    return (\r\n        <div className={style.dialog}>\r\n            <NavLink to={path} activeClassName={style.activeLink}>\r\n                {props.name}</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport style from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n    return <div className={style.message}><p>{props.message}</p></div>\r\n};\r\n\r\n\r\nexport default Message;","import {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormControls/FormControls\";\r\nimport React from \"react\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\nconst AddMessageForm = props => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea}\r\n                   validate={[required, maxLength50]}\r\n                   name=\"newMessage\"\r\n                   placeholder=\"Enter new message\"\r\n            />\r\n            <button>Send</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport const AddMessageFormRedux = reduxForm({form: \"dialogsAddMessageForm\"})(AddMessageForm);","import React from 'react';\r\nimport style from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AddMessageFormRedux} from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.dialogsPage.dialogs.map( dialog => <DialogItem name={dialog.name}\r\n                                                                               id={dialog.id}\r\n                                                                               key={dialog.id}\r\n    /> );\r\n    let messagesElements = props.dialogsPage.messages.map( msg => <Message message={msg.message}\r\n                                                                           key={msg.id}\r\n    />);\r\n\r\n    const addNewMessage = (values) => {\r\n        props.clickSendMessage(values.newMessage);\r\n    }\r\n\r\n    if (!props.isAuth) {\r\n        return <Redirect to='/login' />\r\n    }\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={style.messages}>\r\n                {messagesElements}\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirectComponent = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Redirect to='/login'/>\r\n            } else {\r\n                return <Component {...this.props}/>\r\n            }\r\n\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {onNewMessageSendActionCreator} from \"../../redux/dialogs-Reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {withAuthRedirectComponent} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        clickSendMessage: (newMessage) => {\r\n            dispatch(onNewMessageSendActionCreator(newMessage))\r\n        }\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirectComponent\r\n)(Dialogs);"],"sourceRoot":""}